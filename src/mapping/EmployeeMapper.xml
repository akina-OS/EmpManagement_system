<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hnzs.dao.EmployeeMapper">
	<resultMap id="BaseResultMap" type="com.hnzs.bean.Employee">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="emp_name" property="empName" jdbcType="VARCHAR" />
		<result column="emp_pwd" property="empPwd" jdbcType="VARCHAR" />
		<result column="emp_img" property="empImg" jdbcType="VARCHAR" />
		<result column="emp_vote_num" property="empVoteNum" jdbcType="INTEGER" />
		<result column="init_time" property="initTime" jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Base_Column_List">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		id, emp_name, emp_pwd, emp_img, emp_vote_num, init_time
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		select
		<include refid="Base_Column_List" />
		from employee
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		delete from employee
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.hnzs.bean.Employee">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		insert into employee (id, emp_name, emp_pwd,
		emp_img, emp_vote_num,
		init_time
		)
		values (#{id,jdbcType=INTEGER}, #{empName,jdbcType=VARCHAR},
		#{empPwd,jdbcType=VARCHAR},
		#{empImg,jdbcType=VARCHAR},
		#{empVoteNum,jdbcType=INTEGER}, #{initTime,jdbcType=TIMESTAMP}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.hnzs.bean.Employee">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		insert into employee
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="empName != null">
				emp_name,
			</if>
			<if test="empPwd != null">
				emp_pwd,
			</if>
			<if test="empImg != null">
				emp_img,
			</if>
			<if test="empVoteNum != null">
				emp_vote_num,
			</if>
			<if test="initTime != null">
				init_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="empName != null">
				#{empName,jdbcType=VARCHAR},
			</if>
			<if test="empPwd != null">
				#{empPwd,jdbcType=VARCHAR},
			</if>
			<if test="empImg != null">
				#{empImg,jdbcType=VARCHAR},
			</if>
			<if test="empVoteNum != null">
				#{empVoteNum,jdbcType=INTEGER},
			</if>
			<if test="initTime != null">
				#{initTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.hnzs.bean.Employee">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update employee
		<set>
			<if test="empName != null">
				emp_name = #{empName,jdbcType=VARCHAR},
			</if>
			<if test="empPwd != null">
				emp_pwd = #{empPwd,jdbcType=VARCHAR},
			</if>
			<if test="empImg != null">
				emp_img = #{empImg,jdbcType=VARCHAR},
			</if>
			<if test="empVoteNum != null">
				emp_vote_num = #{empVoteNum,jdbcType=INTEGER},
			</if>
			<if test="initTime != null">
				init_time = #{initTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.hnzs.bean.Employee">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		update employee
		set emp_name = #{empName,jdbcType=VARCHAR},
		emp_pwd =
		#{empPwd,jdbcType=VARCHAR},
		emp_img = #{empImg,jdbcType=VARCHAR},
		emp_vote_num = #{empVoteNum,jdbcType=INTEGER},
		init_time =
		#{initTime,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<!-- ============================================= -->
	<select id="selectByEmpName" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from employee
		where emp_name = #{emp_name}
	</select>

	<!-- 包含被投票数的返回集合 -->
	<resultMap extends="BaseResultMap" type="com.hnzs.bean.Employee"
		id="includeVoteNum">
		<association property="votedNum" column="id"
			select="com.hnzs.dao.VoteNexusMapper.findVoteNumByVoted_id" />
		<collection property="votedEmpList" column="id" select="findEmpVoted">
		</collection>
	</resultMap>
	<!-- 查询不等于传入参数的所有员工信息，考虑到员工人数不是很多所以没有做分页 -->
	<select id="findempByNotID" resultMap="includeVoteNum"
		parameterType="java.lang.Integer">
		SELECT
		<include refid="Base_Column_List" />
		FROM employee WHERE id != #{id}
	</select>

	<!-- 查询该员工投了谁 -->
	<select id="findEmpVoted" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		SELECT
		emp.id,
		emp.emp_name,
		emp.emp_img
		FROM vote_nexus vn
		RIGHT JOIN employee emp
		ON vn.voted_id = emp.id
		WHERE vn.vote_id = #{id}
	</select>

	<!-- 员工持有票数减一 -->
	<update id="evnReduce" parameterType="java.lang.Integer">
		UPDATE employee SET
		emp_vote_num=emp_vote_num - 1 WHERE id = #{id}
	</update>

	<!-- 员工持有票数加一 -->
	<update id="evnAdd" parameterType="java.lang.Integer">
		UPDATE employee SET
		emp_vote_num=emp_vote_num + 1 WHERE id = #{id}
	</update>

	<!-- 查询员工持有票数 -->
	<select id="findVotedNum" parameterType="java.lang.Integer"
		resultType="java.lang.Integer">
		SELECT emp_vote_num FROM employee WHERE id = #{id}
	</select>


	<sql id="querySql">
		<if test="query_str != null">
			WHERE emp_name LIKE #{query_str}
		</if>
	</sql>
	<!-- 查询员工数 -->
	<select id="findEmpCount" resultType="java.lang.Integer">
		SELECT COUNT(id) FROM
		employee
		<include refid="querySql"></include>
	</select>

	<!-- 分页查询 -->
	<select id="findEmpDate" resultMap="includeVoteNum">
		SELECT
		id,emp_name
		FROM
		employee
		<include refid="querySql"></include>
		ORDER BY init_time desc
		LIMIT #{start},#{size}
	</select>

	<resultMap id="includVoteNumMap" type="com.hnzs.bean.Employee">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="emp_name" property="empName" jdbcType="VARCHAR" />
		<result column="vote_num" property="votedNum" />
	</resultMap>
	<!-- 按月得票数由大到小排序 -->
	<select id="findVotedBydesc" resultMap="includVoteNumMap">
		SELECT
		vn.voted_id id,
		emp.emp_name,
		COUNT(vn.voted_id)
		vote_num
		FROM vote_nexus vn ,employee
		emp WHERE vn.voted_id = emp.id
		GROUP BY vn.voted_id
		ORDER BY vote_num
		ASC;
	</select>

	<!-- 按年得票数由大到小排序 -->
	<select id="findVotedByYear" resultMap="includVoteNumMap"
		parameterType="java.lang.Integer">
		SELECT
		emp.id,emp.emp_name,
		SUM(vl.emp_votenum)
		vote_num
		FROM vote_log vl
		,employee emp
		WHERE
		vl.emp_id = emp.id
		AND
		vl.log_year =
		#{year}
		GROUP BY
		vl.emp_id
		ORDER BY vote_num ASC
	</select>

</mapper>